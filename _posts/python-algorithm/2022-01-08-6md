---
title:  "자료형"
excerpt: "파이썬 알고리즘"

toc: true
toc_sticky: true
toc_label: "TOC"

categories:
  - python
  - algorithm
last_modified_at: 2022-01-16T13:00:00-50:00
---

## 빅오
빅오(O, big-O)란 입력값이 무한대로 향할때 함수의 상한을 설명하는 수학적 표기 방법이다.  
점근적 실행 시간를 표기할 때 가장 널리 쓰이는 수학적 표기법 중 하나다.
점근적 실행 시간이란 입력값 n이 커질 때, 즉 입력값이 무한대를 향할 때 함수의 실행 시간의 추이를 의미한다.  
점근적 실행 시간은 시간 복잡도 라고 할 수 있다.
시간 복잡도란 알고리즘을 수행하는데 걸리는 시간을 설명하는 계산 복잡도를 의미하며, 계산 복잡도를 표기하는 대표적인 방법이 바로 빅오다.  
빅오로 시간 복잡도를 표현할 때는 최고차항만을 표기하며, 계수는 무시한다.
예를 들어 3n^2+n번 만큼 계산하는 함수가 있다면 시간 복잡도는 O(n^2)이 된다.  
시간 복잡도를 표기할 때는 입력값에 따른 알고리즘의 실행 시간의 추이만을 살피게 되며, 이 추이에 따른 종류는 다음과 같다.  
* O(1) : 입력값이 아무리 커도 실행 시간은 일정하다.  
실행되는 알고리즘으로 해시 테이블의 조회 및 삽입이 이에 해당한다.
* O(log n) : 로그는 매우 큰 값에도 크게 영향을 받지 않는 편(로그함수의 그래프를 생각)으로 n의 크기에 대해서 견고하다.
* O(n) : 입력값만큼 실행 시간에 영향을 받으며, 알고리즘을 수행하는 데 걸리는 시간은 입력 값에 비레한다.  
이러한 알고리즘을 선형 시간 알고리즘이라고 한다.
정렬되지 않은 리스트에서 최댓값 또는 최솟값을 찾는 경우가 해당하며 이과정에서 모든 입력을 적어도 한 번 이상 열람해야한다.
* O(n log n) : 대부분의 효율 좋은 정렬 알고리즘이 이에 해당한다. 적어도 모든 수에 대해 한 번 이상은 비교해야 하는 비교 기반 정렬 알고리즘은 이보다 빠를 수 없다.
* O(n^2) : 비효율적인 정렬 알고리즘이 이에 해당한다.
* O(2^n) : 피보나치 수를 재귀로 계산하는 알고리즘이 이에 해당한다.
* O(n!) : 외판원 문제를 브루트 포스로 풀이할 때가 이에 해당한다. 가장 느린 알고리즘이다.  

추가적으로  n^2와 2^n를 비교하였을 때 2^n이 더욱 큰 것을 알 수 있다.
```python
for n in range(1, 15 + 1):
  print(n, n**2, 2**n)
1 1 2
2 4 4
3 9 8
4 16 16
5 25 32
6 34 64
7 49 128
```
빅오는 시간 복잡도 외에도 공간 복잡도를 표현하는 데에도 널리 쓰인다.  
또한 알고리즘의 시간과 공간은 '트레이트오프'관계로 
실행 시간이 빠르면 공간을 많이 사용하고  
공간을 적게 차지하면 실행시간이 느린 관계를 가지고 있다.

빅오 표기법은 정확하게 쓰기에는 너무 길고 복잡한 함수를 '적당히 정확하게' 표현하는 방법일 뿐, 최악의 경우/평균적인 경우의 시간 복잡도와는 관계가 없는 개념이다.

즉, 여러 알고리즘은 입력 값에 대하여 최선, 평균, 최악의 **경우** 가 정해지는데 이러한 경우는 n값이 커져도 비슷한 비율로 유지될 것이다.  
빅오 표기는 상한을 의미하므로 위의 정보를 큰 그림에 접근하는 것을 의미한다. 빅오는 상한을 의미하므로 실제 연산 횟수가 이보다 작기만하면 된다. 
정리하자면 다음과 같다
> 빅오 표기법은 주어진(최선/최악/평균) 경우의 수행시간의 상한을 나타낸다.  

## 분할 상환 북석
분할 상환 분석은 빅오와 함께 함수의 동작을 설명할 때 중요한 분석 방법 중 하나다.  
분할 상환 분석이 유용한 대표적인 예로 '동적 배열'이 있는데 동적배열에서 더블링이 일어나면 시간 복잡도는 O(n)이다.
더블링은 어쩌다 한 번 일어나기 때문에 아이템 삽입시 시간 복잡도는 O(n)이라고 하기는 지나친 판단이다.
* 동적 배열은 미리 초깃값을 작게 잡아 배열을 생성하고, 데이터가 추가되면서 꽉채워지면, 늘려주고 모두 복사하는 방식으로 이때
공간을 2배씩 늘려주며 이를 더블링이라한다.

## 병렬화 
일부 알고리즘은 병렬화로 실행 속도를 높일 수 있어 병렬화가 가능하는지의 여부가 알고리즘을 평가하는 척도 중 하나이다.
